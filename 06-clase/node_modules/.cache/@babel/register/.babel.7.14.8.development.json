{
  "{\"assumptions\":{},\"sourceRoot\":\"/run/media/sailentk/Personal/1-CoderHouse-NodeJS/clases/06-clase/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/run/media/sailentk/Personal/1-CoderHouse-NodeJS/clases/06-clase\",\"filename\":\"/run/media/sailentk/Personal/1-CoderHouse-NodeJS/clases/06-clase/src/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/run/media/sailentk/Personal/1-CoderHouse-NodeJS/clases/06-clase\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/run/media/sailentk/Personal/1-CoderHouse-NodeJS/clases/06-clase/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/run/media/sailentk/Personal/1-CoderHouse-NodeJS/clases/06-clase",
      "filename": "/run/media/sailentk/Personal/1-CoderHouse-NodeJS/clases/06-clase/src/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/run/media/sailentk/Personal/1-CoderHouse-NodeJS/clases/06-clase",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/run/media/sailentk/Personal/1-CoderHouse-NodeJS/clases/06-clase/src/index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/run/media/sailentk/Personal/1-CoderHouse-NodeJS/clases/06-clase/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/run/media/sailentk/Personal/1-CoderHouse-NodeJS/clases/06-clase/src/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _promises = _interopRequireDefault(require(\"fs/promises\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Archivo = function Archivo(file) {\n  var _this = this;\n\n  _classCallCheck(this, Archivo);\n\n  _defineProperty(this, \"addProduct\", /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(title, price, thumbnail) {\n      var arr;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              arr = _this.content.push({\n                title: title,\n                price: price,\n                thumbnail: thumbnail,\n                id: _this.content.length + 1\n              });\n              _context.next = 4;\n              return _promises[\"default\"].writeFile(_this.file, JSON.stringify(_this.content, null, 2));\n\n            case 4:\n              console.log(\"\".concat(arr.title, \" added succesfully to \").concat(_this.fie));\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"readProducts\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var readedFile;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _promises[\"default\"].readFile(_this.file, 'utf-8');\n\n          case 3:\n            readedFile = _context2.sent;\n            console.log(readedFile);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_this.content);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  })));\n\n  _defineProperty(this, \"deleteProducts\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _promises[\"default\"].unlink(_this.file);\n\n          case 3:\n            console.log(\"Archivo \".concat(_this.file, \" borrado\"));\n            _context3.next = 9;\n            break;\n\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log('No se pudo borrar archivo');\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 6]]);\n  })));\n\n  this.file = file;\n  this.content = [];\n};\n\nvar products = new Archivo('product.txt');\nproducts.addProduct('Arroz', 128.34, 'https://bit.ly/3zjJXCh').then(function () {\n  products.addProduct('Papa', 200, 'https://bit.ly/3zh4584');\n}).then(function () {\n  products.addProduct('Mandarina', 500.55, 'https://bit.ly/3zocqab');\n}).then(function () {\n  products.addProduct('Cebolla', 150.24, 'https://bit.ly/3kIwa42');\n}).then(function () {\n  products.readProducts();\n}).then(function () {\n  products.deleteProducts();\n})[\"catch\"](function (e) {\n  console.log(e);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkFyY2hpdm8iLCJmaWxlIiwidGl0bGUiLCJwcmljZSIsInRodW1ibmFpbCIsImFyciIsImNvbnRlbnQiLCJwdXNoIiwiaWQiLCJsZW5ndGgiLCJmcyIsIndyaXRlRmlsZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJjb25zb2xlIiwibG9nIiwiZmllIiwicmVhZEZpbGUiLCJyZWFkZWRGaWxlIiwidW5saW5rIiwicHJvZHVjdHMiLCJhZGRQcm9kdWN0IiwidGhlbiIsInJlYWRQcm9kdWN0cyIsImRlbGV0ZVByb2R1Y3RzIiwiZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7Ozs7O0lBRU1BLE8sR0FDSixpQkFBWUMsSUFBWixFQUFrQjtBQUFBOztBQUFBOztBQUFBO0FBQUEsdUVBS0wsaUJBQU9DLEtBQVAsRUFBY0MsS0FBZCxFQUFxQkMsU0FBckI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFSEMsY0FBQUEsR0FGRyxHQUVHLEtBQUksQ0FBQ0MsT0FBTCxDQUFhQyxJQUFiLENBQWtCO0FBQzVCTCxnQkFBQUEsS0FBSyxFQUFMQSxLQUQ0QjtBQUU1QkMsZ0JBQUFBLEtBQUssRUFBTEEsS0FGNEI7QUFHNUJDLGdCQUFBQSxTQUFTLEVBQVRBLFNBSDRCO0FBSTVCSSxnQkFBQUEsRUFBRSxFQUFFLEtBQUksQ0FBQ0YsT0FBTCxDQUFhRyxNQUFiLEdBQXNCO0FBSkUsZUFBbEIsQ0FGSDtBQUFBO0FBQUEscUJBUUhDLHFCQUFHQyxTQUFILENBQWEsS0FBSSxDQUFDVixJQUFsQixFQUF3QlcsSUFBSSxDQUFDQyxTQUFMLENBQWUsS0FBSSxDQUFDUCxPQUFwQixFQUE2QixJQUE3QixFQUFtQyxDQUFuQyxDQUF4QixDQVJHOztBQUFBO0FBU1RRLGNBQUFBLE9BQU8sQ0FBQ0MsR0FBUixXQUFlVixHQUFHLENBQUNILEtBQW5CLG1DQUFpRCxLQUFJLENBQUNjLEdBQXREO0FBVFM7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFXVEYsY0FBQUEsT0FBTyxDQUFDQyxHQUFSOztBQVhTO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBTEs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUEsNkdBb0JIO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFFY0wscUJBQUdPLFFBQUgsQ0FBWSxLQUFJLENBQUNoQixJQUFqQixFQUF1QixPQUF2QixDQUZkOztBQUFBO0FBRUxpQixZQUFBQSxVQUZLO0FBR1hKLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxVQUFaO0FBSFc7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFLWEosWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksS0FBSSxDQUFDVCxPQUFqQjs7QUFMVztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQXBCRzs7QUFBQSwrR0E2QkQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFFUEkscUJBQUdTLE1BQUgsQ0FBVSxLQUFJLENBQUNsQixJQUFmLENBRk87O0FBQUE7QUFHYmEsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLG1CQUF1QixLQUFJLENBQUNkLElBQTVCO0FBSGE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFLYmEsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQVo7O0FBTGE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0E3QkM7O0FBQ2hCLE9BQUtkLElBQUwsR0FBWUEsSUFBWjtBQUNBLE9BQUtLLE9BQUwsR0FBZSxFQUFmO0FBQ0QsQzs7QUFvQ0gsSUFBTWMsUUFBUSxHQUFHLElBQUlwQixPQUFKLENBQVksYUFBWixDQUFqQjtBQUNBb0IsUUFBUSxDQUNMQyxVQURILENBQ2MsT0FEZCxFQUN1QixNQUR2QixFQUMrQix3QkFEL0IsRUFFR0MsSUFGSCxDQUVRLFlBQU07QUFDVkYsRUFBQUEsUUFBUSxDQUFDQyxVQUFULENBQW9CLE1BQXBCLEVBQTRCLEdBQTVCLEVBQWlDLHdCQUFqQztBQUNELENBSkgsRUFLR0MsSUFMSCxDQUtRLFlBQU07QUFDVkYsRUFBQUEsUUFBUSxDQUFDQyxVQUFULENBQW9CLFdBQXBCLEVBQWlDLE1BQWpDLEVBQXlDLHdCQUF6QztBQUNELENBUEgsRUFRR0MsSUFSSCxDQVFRLFlBQU07QUFDVkYsRUFBQUEsUUFBUSxDQUFDQyxVQUFULENBQW9CLFNBQXBCLEVBQStCLE1BQS9CLEVBQXVDLHdCQUF2QztBQUNELENBVkgsRUFXR0MsSUFYSCxDQVdRLFlBQU07QUFDVkYsRUFBQUEsUUFBUSxDQUFDRyxZQUFUO0FBQ0QsQ0FiSCxFQWNHRCxJQWRILENBY1EsWUFBTTtBQUNWRixFQUFBQSxRQUFRLENBQUNJLGNBQVQ7QUFDRCxDQWhCSCxXQWlCUyxVQUFDQyxDQUFELEVBQU87QUFDWlgsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlVLENBQVo7QUFDRCxDQW5CSCIsInNvdXJjZVJvb3QiOiIvcnVuL21lZGlhL3NhaWxlbnRrL1BlcnNvbmFsLzEtQ29kZXJIb3VzZS1Ob2RlSlMvY2xhc2VzLzA2LWNsYXNlL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnMgZnJvbSAnZnMvcHJvbWlzZXMnO1xuXG5jbGFzcyBBcmNoaXZvIHtcbiAgY29uc3RydWN0b3IoZmlsZSkge1xuICAgIHRoaXMuZmlsZSA9IGZpbGU7XG4gICAgdGhpcy5jb250ZW50ID0gW107XG4gIH1cblxuICBhZGRQcm9kdWN0ID0gYXN5bmMgKHRpdGxlLCBwcmljZSwgdGh1bWJuYWlsKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGFyciA9IHRoaXMuY29udGVudC5wdXNoKHtcbiAgICAgICAgdGl0bGUsXG4gICAgICAgIHByaWNlLFxuICAgICAgICB0aHVtYm5haWwsXG4gICAgICAgIGlkOiB0aGlzLmNvbnRlbnQubGVuZ3RoICsgMSxcbiAgICAgIH0pO1xuICAgICAgYXdhaXQgZnMud3JpdGVGaWxlKHRoaXMuZmlsZSwgSlNPTi5zdHJpbmdpZnkodGhpcy5jb250ZW50LCBudWxsLCAyKSk7XG4gICAgICBjb25zb2xlLmxvZyhgJHthcnIudGl0bGV9IGFkZGVkIHN1Y2Nlc2Z1bGx5IHRvICR7dGhpcy5maWV9YCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICB9XG4gIH07XG5cbiAgcmVhZFByb2R1Y3RzID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZWFkZWRGaWxlID0gYXdhaXQgZnMucmVhZEZpbGUodGhpcy5maWxlLCAndXRmLTgnKTtcbiAgICAgIGNvbnNvbGUubG9nKHJlYWRlZEZpbGUpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyh0aGlzLmNvbnRlbnQpO1xuICAgIH1cbiAgfTtcblxuICBkZWxldGVQcm9kdWN0cyA9IGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgZnMudW5saW5rKHRoaXMuZmlsZSk7XG4gICAgICBjb25zb2xlLmxvZyhgQXJjaGl2byAke3RoaXMuZmlsZX0gYm9ycmFkb2ApO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZygnTm8gc2UgcHVkbyBib3JyYXIgYXJjaGl2bycpO1xuICAgIH1cbiAgfTtcbn1cblxuY29uc3QgcHJvZHVjdHMgPSBuZXcgQXJjaGl2bygncHJvZHVjdC50eHQnKTtcbnByb2R1Y3RzXG4gIC5hZGRQcm9kdWN0KCdBcnJveicsIDEyOC4zNCwgJ2h0dHBzOi8vYml0Lmx5LzN6akpYQ2gnKVxuICAudGhlbigoKSA9PiB7XG4gICAgcHJvZHVjdHMuYWRkUHJvZHVjdCgnUGFwYScsIDIwMCwgJ2h0dHBzOi8vYml0Lmx5LzN6aDQ1ODQnKTtcbiAgfSlcbiAgLnRoZW4oKCkgPT4ge1xuICAgIHByb2R1Y3RzLmFkZFByb2R1Y3QoJ01hbmRhcmluYScsIDUwMC41NSwgJ2h0dHBzOi8vYml0Lmx5LzN6b2NxYWInKTtcbiAgfSlcbiAgLnRoZW4oKCkgPT4ge1xuICAgIHByb2R1Y3RzLmFkZFByb2R1Y3QoJ0NlYm9sbGEnLCAxNTAuMjQsICdodHRwczovL2JpdC5seS8za0l3YTQyJyk7XG4gIH0pXG4gIC50aGVuKCgpID0+IHtcbiAgICBwcm9kdWN0cy5yZWFkUHJvZHVjdHMoKTtcbiAgfSlcbiAgLnRoZW4oKCkgPT4ge1xuICAgIHByb2R1Y3RzLmRlbGV0ZVByb2R1Y3RzKCk7XG4gIH0pXG4gIC5jYXRjaCgoZSkgPT4ge1xuICAgIGNvbnNvbGUubG9nKGUpO1xuICB9KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Archivo",
        "file",
        "title",
        "price",
        "thumbnail",
        "arr",
        "content",
        "push",
        "id",
        "length",
        "fs",
        "writeFile",
        "JSON",
        "stringify",
        "console",
        "log",
        "fie",
        "readFile",
        "readedFile",
        "unlink",
        "products",
        "addProduct",
        "then",
        "readProducts",
        "deleteProducts",
        "e"
      ],
      "mappings": ";;AAAA;;;;;;;;;;;;IAEMA,O,GACJ,iBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AAAA;AAAA,uEAKL,iBAAOC,KAAP,EAAcC,KAAd,EAAqBC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHC,cAAAA,GAFG,GAEG,KAAI,CAACC,OAAL,CAAaC,IAAb,CAAkB;AAC5BL,gBAAAA,KAAK,EAALA,KAD4B;AAE5BC,gBAAAA,KAAK,EAALA,KAF4B;AAG5BC,gBAAAA,SAAS,EAATA,SAH4B;AAI5BI,gBAAAA,EAAE,EAAE,KAAI,CAACF,OAAL,CAAaG,MAAb,GAAsB;AAJE,eAAlB,CAFH;AAAA;AAAA,qBAQHC,qBAAGC,SAAH,CAAa,KAAI,CAACV,IAAlB,EAAwBW,IAAI,CAACC,SAAL,CAAe,KAAI,CAACP,OAApB,EAA6B,IAA7B,EAAmC,CAAnC,CAAxB,CARG;;AAAA;AASTQ,cAAAA,OAAO,CAACC,GAAR,WAAeV,GAAG,CAACH,KAAnB,mCAAiD,KAAI,CAACc,GAAtD;AATS;AAAA;;AAAA;AAAA;AAAA;AAWTF,cAAAA,OAAO,CAACC,GAAR;;AAXS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALK;;AAAA;AAAA;AAAA;AAAA;;AAAA,6GAoBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEcL,qBAAGO,QAAH,CAAY,KAAI,CAAChB,IAAjB,EAAuB,OAAvB,CAFd;;AAAA;AAELiB,YAAAA,UAFK;AAGXJ,YAAAA,OAAO,CAACC,GAAR,CAAYG,UAAZ;AAHW;AAAA;;AAAA;AAAA;AAAA;AAKXJ,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACT,OAAjB;;AALW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GApBG;;AAAA,+GA6BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEPI,qBAAGS,MAAH,CAAU,KAAI,CAAClB,IAAf,CAFO;;AAAA;AAGba,YAAAA,OAAO,CAACC,GAAR,mBAAuB,KAAI,CAACd,IAA5B;AAHa;AAAA;;AAAA;AAAA;AAAA;AAKba,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;;AALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA7BC;;AAChB,OAAKd,IAAL,GAAYA,IAAZ;AACA,OAAKK,OAAL,GAAe,EAAf;AACD,C;;AAoCH,IAAMc,QAAQ,GAAG,IAAIpB,OAAJ,CAAY,aAAZ,CAAjB;AACAoB,QAAQ,CACLC,UADH,CACc,OADd,EACuB,MADvB,EAC+B,wBAD/B,EAEGC,IAFH,CAEQ,YAAM;AACVF,EAAAA,QAAQ,CAACC,UAAT,CAAoB,MAApB,EAA4B,GAA5B,EAAiC,wBAAjC;AACD,CAJH,EAKGC,IALH,CAKQ,YAAM;AACVF,EAAAA,QAAQ,CAACC,UAAT,CAAoB,WAApB,EAAiC,MAAjC,EAAyC,wBAAzC;AACD,CAPH,EAQGC,IARH,CAQQ,YAAM;AACVF,EAAAA,QAAQ,CAACC,UAAT,CAAoB,SAApB,EAA+B,MAA/B,EAAuC,wBAAvC;AACD,CAVH,EAWGC,IAXH,CAWQ,YAAM;AACVF,EAAAA,QAAQ,CAACG,YAAT;AACD,CAbH,EAcGD,IAdH,CAcQ,YAAM;AACVF,EAAAA,QAAQ,CAACI,cAAT;AACD,CAhBH,WAiBS,UAACC,CAAD,EAAO;AACZX,EAAAA,OAAO,CAACC,GAAR,CAAYU,CAAZ;AACD,CAnBH",
      "sourceRoot": "/run/media/sailentk/Personal/1-CoderHouse-NodeJS/clases/06-clase/src/",
      "sourcesContent": [
        "import fs from 'fs/promises';\n\nclass Archivo {\n  constructor(file) {\n    this.file = file;\n    this.content = [];\n  }\n\n  addProduct = async (title, price, thumbnail) => {\n    try {\n      const arr = this.content.push({\n        title,\n        price,\n        thumbnail,\n        id: this.content.length + 1,\n      });\n      await fs.writeFile(this.file, JSON.stringify(this.content, null, 2));\n      console.log(`${arr.title} added succesfully to ${this.fie}`);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  readProducts = async () => {\n    try {\n      const readedFile = await fs.readFile(this.file, 'utf-8');\n      console.log(readedFile);\n    } catch (error) {\n      console.log(this.content);\n    }\n  };\n\n  deleteProducts = async () => {\n    try {\n      await fs.unlink(this.file);\n      console.log(`Archivo ${this.file} borrado`);\n    } catch (error) {\n      console.log('No se pudo borrar archivo');\n    }\n  };\n}\n\nconst products = new Archivo('product.txt');\nproducts\n  .addProduct('Arroz', 128.34, 'https://bit.ly/3zjJXCh')\n  .then(() => {\n    products.addProduct('Papa', 200, 'https://bit.ly/3zh4584');\n  })\n  .then(() => {\n    products.addProduct('Mandarina', 500.55, 'https://bit.ly/3zocqab');\n  })\n  .then(() => {\n    products.addProduct('Cebolla', 150.24, 'https://bit.ly/3kIwa42');\n  })\n  .then(() => {\n    products.readProducts();\n  })\n  .then(() => {\n    products.deleteProducts();\n  })\n  .catch((e) => {\n    console.log(e);\n  });\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1627147275742
  }
}